/*------------------------------------------------------------------------------------------------------------------------------------
Disclaimer:
Notice to any user of this code.
The author makes no warranty, expressed or implied, as to the results obtained from the use of the information on the website. The author shall have no liability for the accuracy of the information and cannot be held liable for any third-party claims or losses of any damages. The user shall have the right to view the information and usage for the purpose for which it is intended and disclosed.
-------------------------------------------------------------------------------------------------------------------------------------*/

/***************************************************************************
   MACRO:       CCHS_AGE_STANDARD
 
   PURPOSE: To produce direct age-standardized population proportions for a categorical variable of interest in the Canadian Community Heath Survey (CCHS)
    
    
In summary, there are 5 main steps needed to produce direct age-standardized proportions using CCHS data:
1.	Select a standard reference population and age group categories.
2.	Calculate the standard population weights that will be used to direct standardize the CCHS proportion estimate.
3.	For each age group category, calculate the survey weighted proportions for each level of the CCHS variable.  
4.	For each age group category, the survey weighted crude proportions are multiplied by the standard population weights, in order to produce expected proportions.  
5.	In order to get direct-standardized proportions, sum the expected proportions by each level of the CCHS variable.

Three extra steps:

6.	Calculate standard errors, in order to compute logit confidence intervals for age-standardized proportion estimates.
7. 	Calculate logit confidence intervals for the direct age-standardized proportions.
8. 	Output results


   MANDATORY PARAMETERS:
		Data, var, canpopyr, survey_wt, agegrp, bsvarprefix, numbs, out
		


   CREATED:    Oct 5, 2018

   UPDATED:    Oct 9, 2019

   PROGRAMMER / CONTACT:    Tristan Watson 
                               

   UPDATES:     
              


   NOTES:       

You will need to categorize your "agegrp" variable in the same way as the agegrp format or update the format categories in the macro to reflect how you categorized your age variables

Note: "Age-specific rates based on small numbers will exhibit a large amount of random variation and the data should be aggregated. Hence, different age groupings and corresponding calculations of age-adjustment weights may be needed for different applications."  [Ref 1]

Our approach uses the variance of the survey-weighted proportion as an estimate of the variance of the age-standardized proportion. Another option for the variance calculation could be to directly bootstrap the age-standardized proportion. The variance of the survey-weighted crude proportion estimate is used as proxy for the variance of the age-standardized proportion; this has an unknown impact on the quality of the confidence interval estimate.

***************************************************************************;

* ADDITIONAL REFERENCES:
(1) Zhiwei Zeng. Adding the Feature of Age Adjustment for Survey-related Procedure in SAS-- Age Adjusting Prevalence Estimate from Population Based Surveys

(2) Christian Gagne, Georgia Roberts, Leslie-Anne Keown. Weighted estimation and bootstrap variance estimation for analyzing
survey data: How to implement in selected software.

(3) https://support.sas.com/documentation/cdl/en/statug/63033/HTML/default/viewer.htm#surveyfreq_toc.htm
	(Accessed May 20, 2019)	

For information about combining multiple CCHS survey cycles and how to scale the survey and bootstrap weights:

(4) Steven Thomas and Brenda Wannell. Combining cycles of the Canadian Health Survey. (2009)


For information about CVs and appropriate observation counts with CCHS data, refer to relevant CCHS User Guide.


************************************* INSTRUCTIONS **************************************

--- You MUST specify ---


data 
    - Input dataset name
var 
    - Variable of Interest

canpopyr
    - Year of Canadian population to use

survey_wt
    - Survey weight variable of the CCHS survey

agegrp 
     - Name of age group variable in the CCHS input dataset. This name and categories should be the same as the standard_pop_wt dataset in Steps 1 & 2.

bsvarprefix
     - The prefix of the bootstrapping variables (e.g. bsw for the CCHS
       500 bootstrapping variables)
       
numbs
     - Number of bootstrapping weights  (e.g. 500 for the CCHS 500
       bootstrapping variables)
  
out
     - Output dataset name 



/*** READ before running the macro ***:

You will need to do Step 1 and 2 before running the macro:

/* Step 1 & 2 - Select a standard reference population and age group categories.  
                Calculate the standard population weights that will be used to direct standardize the CCHS proportion estimate.

	The proportion of the population in each level of the age-specific group of of the standard reference population will 
	be used as age adjustment weights to direct standardize CCHS proportion estimates.
	
	The Canadian population is commonly used as the standard population.

	* See the note above about selecting age group categories;
	
	 You will need to have you standard reference population (called: standard_pop_wt) in this format:
        
              &agegrp. |   std_pop_wt
              ------------------------------
              18-34     |  29.13
              35-49     |  26.34
              50-64     |  25.97
               ...      |   ...
	       
	  The name variable and age group categories in the standard_pop_wt dataset needs to be consistent in the CCHS study population. 
*/

***/



******************************************************************/ ;




%macro cchs_age_standard (
                        data = ,
		        var = ,	 
	                canpopyr = ,
                        survey_wt = ,
                        agegrp = ,
 		        bsvarprefix = ,
                        numbs = ,
                        out = );
                   

/* -----------------------------------------------
Step 3. For each age group category, calculate the survey weighted proportions for each level of the CCHS variable using PROC FREQ
-------------------------------------------------*/

	proc freq data=&data. noprint;
		tables &agegrp. * &var. /out=a outpct ;
		weight &survey_wt.;  * The survey weight variable;
	run;


/* -----------------------------------------------
Step 4. For each age group category, the survey weighted crude proportions are multiplied by the standard population weights, in order to produce expected/adjusted proportions. 
-------------------------------------------------*/

	data out_B;
		merge a standard_pop_wt ;
		by &agegrp.;
		wt_prop = (pct_row/100) * (std_pop_wt/100);
	run;
 
    
/* -----------------------------------------------
Step 5. In order to get direct-standardized proportions, sum the expected proportions by each level of the CCHS variable using Proc SQL.
-------------------------------------------------*/

	proc sql;
		create table AgeStProp_&var.  as
		select &var., sum (b.wt_prop) as AgeStProp    
		from out_B as b
		group by &var.;
	quit;
    
    
/*-------------------------------------------------
Step 6. Generate standard errors using PROC SURVEYFREQ, in order to compute for logit confidence intervals for age-standardized proportion estimates
--------------------------------------------------*/

	 * Note the default WALD confidence intervals do not work with small counts, since it does fit the normal approximation. 
	 In these cases, it is preferable to compute LOGIT or WILSON confidence intervals
	 
	 Our approach uses the variance of the survey-weighted proportion as an estimate of the variance of the age-standardized proportion. 
	 Another option for the variance calculation could be to directly bootstrap the age-standardized proportion. 
	 
	 The variance of the survey-weighted crude proportion estimate is used as proxy for the variance of the age-standardized proportion; this has an unknown impact on the quality of the confidence interval estimate.
	 
	 ;

	proc surveyfreq data=&data. varmethod=brr ;  /* Variance estimation using Balance Repeated Replication Method */
	    tables &var. / wtfreq cv cl(type=logit) ;
		  weight &survey_wt;
		  repweights &bsvarprefix.1-&bsvarprefix.&numbs.;  
		  ods  output oneway = std_err;
	run;

	  *ods listing;


	* Reorganize and modify variables in std_err dataset;

	data std_err;
		retain varname varlevel;
		set std_err;
		varlevel = &var.;
		if varlevel ^= "";
		varname = strip(tranwrd(table,"Table ",""));

		keep Frequency WgtFreq varname varlevel percent cv stderr LowerCL UpperCL;
		label Frequency = "Unweighted Frequency";

	  rename varlevel= &var.  lowercl=CrudeProp_LCL   percent = CrudeProp UpperCL=CrudeProp_UCL;

	run;

	

/* -----------------------------------------------
Step 7 and 8. Calculate logit confidence intervals for the direct age-standardized proportions.
	Then merge the age-standardize proportions estimates into a table with the logit confidence intervals for the age-standardized proportions.
-------------------------------------------------*/

	data &out. ;
	    retain frequency wgtFreq varname &var. CrudeProp CrudeProp_LCL CrudeProp_UCL CV StdErr	AgeStProp AgeStProp_LCL AgeStProp_UCL;
		  merge AgeStProp_&var. std_err;
		  by  &var.;

		* Compute approximate Logit Confidence Intervals;

		  stderr          = stderr / 100; 
		  X               = ((AgeStProp) / (1 - AgeStProp)) ; 
		  W               = ((AgeStProp) * (1 - AgeStProp)) ; 
		  Y               = log(X);

		  Y_LCL           = Y - ((1.96 * stderr) / W);  
		  Y_UCL           = Y + ((1.96 * stderr) / W); 

			* (Note: t distribution with 500 df,  0.05 alpha  =  1.96. 500 degrees of freedom from the 500 CCHS bootstrap weights);

		  AgeStProp_LCL   = exp (Y_LCL) / (1 + exp(Y_LCL));
		  AgeStProp_UCL   = exp (Y_UCL) / (1 + exp(Y_UCL));


		* Multiply proportions by 100;

		 CV              = CV * 100;
		 StdErr          = StdErr * 100; 
		 AgeStProp       = AgeStProp * 100;
		 AgeStProp_LCL   = AgeStProp_LCL * 100;
		 AgeStProp_UCL   = AgeStProp_UCL * 100;

		 drop X W Y Y_LCL Y_UCL;    
	run;


%mend cchs_age_standard;
